////
/// @group functions/units
////

/// Checks if a value is in `em` units.
///
/// This function determines whether the provided value is a number and if
/// it has the `em` unit. Useful for unit-specific operations or checks.
///
/// @param {Number} $value - The value to check, which can include units.
/// @return {Boolean} - Returns `true` if the value is a number with `em` units, otherwise `false`.
///
/// @example scss
///   is-em(16em) // true
///   is-em(16px) // false
///   is-em(1.5rem) // false
///

@function is-em($value) {
  @return is-number($value) and unit($value) == "em";
}

/// Checks if a value is in `rem` units.
///
/// This function checks if the provided value is a number and if
/// it has the `rem` unit. This is useful when working with root-relative
/// font sizing or spacing.
///
/// @param {Number} $value - The value to check, including potential units.
/// @return {Boolean} - Returns `true` if the value is a number with `rem` units, otherwise `false`.
///
/// @example scss
///   is-rem(1rem) // true
///   is-rem(16px) // false
///   is-rem(1em) // false
///

@function is-rem($value) {
  @return is-number($value) and unit($value) == "rem";
}

///
/// Checks if a value is in `px` units.
///
/// This function verifies if the provided value is a number and if
/// it has the `px` unit. This can be used to differentiate between
/// pixel-based and other unit-based values.
///
/// @param {Number} $value - The value to check, potentially with units.
/// @return {Boolean} - Returns `true` if the value is a number with `px` units, otherwise `false`.
///
/// @example scss
///   is-px(16px) // true
///   is-px(1rem) // false
///   is-px(1em) // false
///

@function is-px($value) {
  @return is-number($value) and unit($value) == "px";
}
