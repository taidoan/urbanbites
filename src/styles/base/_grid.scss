@use "./../abstracts/_index" as *;

section {
  container: grid / inline-size;
}

%grid-base {
  --grid-padding-inline: #{padding-clamp(
      rem($padding-inline-sm),
      rem($padding-inline-desktop)
    )};
  @include mq("base-sm") {
    --grid-padding-inline: #{padding-clamp(
        rem($padding-inline-base),
        rem($padding-inline-desktop)
      )};
  }
  margin: 0 auto;
  max-width: rem($content-max-width);
  padding-inline: var(--grid-padding-inline);
  transition: padding 0.25s;
  width: 100%;

  @container grid (min-width: #{rem($content-max-width)}) {
    --grid-padding-inline: #{padding-clamp(
        rem($padding-inline-base-w-border),
        rem($padding-inline-desktop-w-border)
      )};
  }

  @container grid (min-width: #{rem(1388)}) {
    padding-inline: 0;
  }
}

.content-grid {
  @extend %grid-base;
  --grid-padding-block: #{padding-clamp(
      rem($padding-block-base),
      rem($padding-block-desktop)
    )};
  padding-block: var(--grid-padding-block);

  &--inc-border {
    @include mq("base-sm") {
      --grid-padding-inline: #{padding-clamp(
          rem($padding-inline-base-w-border),
          rem($padding-inline-desktop-w-border)
        )};
    }

    @container grid (min-width: #{rem($content-max-width)}) {
      padding-inline: 0;
    }
  }

  &--half {
    @include mq("base-sm") {
      --grid-padding-inline: #{padding-clamp(
          rem($padding-inline-base-w-border),
          rem($padding-inline-desktop-w-border)
        )};
    }

    @include mq("md") {
      max-width: rem(calc($content-max-width / 2));
    }

    @container grid (min-width: #{rem($content-max-width)}) {
      padding-inline: var(--grid-padding-inline);
    }
  }
}
