@use "./../../styles/abstracts/_index" as abstracts;

.filter {
  list-style-type: none;
  padding: 0;
}

@include abstracts.mq("md", "max", "width") {
  .filter {
    li:nth-child(odd) .tab {
      background-color: var(--clr-light-400);
    }

    li:nth-child(even) .tab {
      background-color: var(--clr-light-300);
    }
  }

  .tab {
    --font-clr: var(--clr-tertiary-300);
    border: 0;
    color: var(--font-clr);
    cursor: pointer;
    display: block;
    padding-block: abstracts.rem(18);
    padding-inline: abstracts.size-clamp(
      abstracts.rem(abstracts.$padding-inline-base),
      abstracts.rem(abstracts.$padding-inline-desktop)
    );
    position: relative;
    text-align: left;
    width: 100%;

    &::after {
      color: var(--clr-light-500);
      content: "▸";
      font-size: abstracts.rem(24);
      position: absolute;
      right: abstracts.size-clamp(
        abstracts.rem(abstracts.$padding-inline-base),
        abstracts.rem(abstracts.$padding-inline-desktop)
      );
      top: 50%;
      transform: translateY(-50%);
    }

    &Active {
      font-weight: 600;
      &::after {
        content: "";
      }
    }
  }

  .dropdown {
    background-color: var(--clr-secondary-100);
    color: var(--clr-light-400);
    cursor: pointer;
    display: block;
    padding-block: abstracts.rem(48);
    padding-inline: abstracts.size-clamp(
      abstracts.rem(abstracts.$padding-inline-base),
      abstracts.rem(abstracts.$padding-inline-desktop)
    );
    position: relative;
    width: 100%;

    &::after {
      content: "▼";
      font-size: abstracts.size-clamp(abstracts.rem(16), abstracts.rem(18));
      position: absolute;
      right: abstracts.size-clamp(
        abstracts.rem(abstracts.$padding-inline-base),
        abstracts.rem(abstracts.$padding-inline-desktop)
      );

      top: 50%;
      transform: translateY(-50%);
    }

    &Open::after {
      content: "▲";
    }
  }

  .selectedDesc {
    display: block;
    font-weight: normal;
    margin-top: abstracts.rem(12);
    width: 80%;
  }

  .selectedLabel {
    display: block;
    font-family: var(--ff-display);
    font-size: abstracts.rem(48);
    font-weight: 700;
    text-transform: uppercase;
    @include abstracts.text-crop();
  }
}

@include abstracts.mq("md") {
  .filter {
    display: flex;
    flex-wrap: wrap;
    gap: abstracts.size-clamp(abstracts.rem(20), abstracts.rem(24));
    justify-content: center;
    padding-inline: 0;
  }

  .dropdown {
    display: none;
  }

  .tab {
    --background-clr: #{abstracts.$tab-background-color};
    --font-clr: var(--clr-tertiary-400);
    --fs-button: #{map-get(abstracts.$project-typography-scale, button)};
    --button-shadow: #{abstracts.$button-hover-shadow};
    --btn-padding-block: #{abstracts.size-clamp(
        abstracts.rem(16),
        abstracts.rem(18)
      )};
    --btn-padding-inline: #{abstracts.size-clamp(
        abstracts.rem(22),
        abstracts.rem(24)
      )};

    align-items: center;
    background: var(--background-clr);
    border: none;
    border-radius: abstracts.rem(12);
    color: var(--font-clr);
    cursor: pointer;
    display: flex;
    font-family: var(--ff-body);
    font-size: var(--fs-button);
    font-weight: 600;
    justify-content: center;
    line-height: 1;
    overflow: hidden;
    padding: var(--btn-padding-block) var(--btn-padding-inline);
    transition: all 0.2s ease;
  }

  .tabActive {
    --background-clr: var(--clr-secondary-400);
    --font-clr: var(--clr-light-400);
    cursor: default;
  }

  @media (hover: hover) {
    .tab:hover:not(.tabActive) {
      --background-clr: var(--clr-primary-400);
      --font-clr: var(--clr-light-400);
    }
  }
}
